// Read the pdnsd.conf(5) manpage for an explanation of the options.

/* Note: this file is overriden by automatic config files when
   /etc/default/pdnsd AUTO_MODE is set and that
   /usr/share/pdnsd/pdnsd-$AUTO_MODE.conf exists
 */

global {
	perm_cache=65536;
	cache_dir="/var/cache/pdnsd";
	run_as="pdnsd";
	server_ip = any;  // Use eth0 here if you want to allow other
			  // machines on your network to query pdnsd.
	outside_interface="eth0";
	status_ctl = on;
  	paranoid=on;
//	query_method=tcp_udp;	// pdnsd must be compiled with tcp
				// query support for this to work.
	min_ttl=15m;       // Retain cached entries at least 15 minutes.
	max_ttl=1w;	   // One week.
	timeout=10;        // Global timeout option (10 seconds).
	neg_rrs_pol=on;

        // Don't enable if you don't recurse yourself, can lead to problems
        // delegation_only="com","net";
}

/* with status_ctl=on and resolvconf installed, this will work out from the box
   this is the recommended setup for mobile machines */
/*
server {
    label="resolvconf";
}
*/

/*
// This section is meant for resolving from root servers.
server {
	label = "root-servers";
	root_server=on;
	ip = 	198.41.0.4
	,	192.228.79.201
	,	192.33.4.12
	,	128.8.10.90
	,	192.203.230.10
	,	192.5.5.241
	,	192.112.36.4
	,	128.63.2.53
//	,	192.36.148.17
//	,	192.58.128.30
//	,	193.0.14.129
//	,	198.32.64.12
//	,	202.12.27.33
	;
	timeout = 5;
	uptest = query;
	interval = 30m;      // Test every half hour.
	ping_timeout = 300;  // 30 seconds.
	purge_cache = off;
	exclude = .localdomain;
	policy = included;
	preset = off;
}
*/

# The servers provided by OpenDNS are fast, but they do not reply with
# NXDOMAIN for non-existant domains, instead they supply you with an
# address of one of their search engines. They also lie about the addresses of 
# of the search engines of google, microsoft and yahoo.
# If you do not like this behaviour the "reject" option may be useful.
server {
	label = "opendns";
	ip = 208.67.222.222,
	     208.67.220.220;
	reject = 208.69.32.0/24,  # You may need to add additional address ranges
	         208.69.34.0/24,  # here if the addresses of their search engines
	         208.67.219.0/24; # change.
	reject_policy = fail;     # If you do not provide any alternative server
	                          # sections, like the following root-server
	                          # example, "negate" may be more appropriate here.
	timeout = 4;
	uptest = ping;            # Test availability using ICMP echo requests.
        ping_timeout = 100;       # ping test will time out after 10 seconds.
	interval = 15m;           # Test every 15 minutes.
	preset = off;
	purge_cache=off;
	proxy_only=on;
}

source {
	owner=localhost;
//	serve_aliases=on;
	file="/etc/hosts";
}

rr {
	name=localhost;
	reverse=on;
	a=127.0.0.1;
	owner=localhost;
	soa=localhost,root.localhost,42,86400,900,86400,86400;
}

/*
neg {
	name=doubleclick.net;
	types=domain;   // This will also block xxx.doubleclick.net, etc.
}
*/

/*
neg {
	name=bad.server.com;   // Badly behaved server you don't want to connect to.
	types=A,AAAA;
}
*/

neg {
	name=4chan-ads.org;
	types = domain;
}
neg {
	name=clicktale.com;
	types=domain;
}
neg {
	name=clicktale.net;
	types=domain;
}
neg {
	name=fbcdn.com;
	types=domain;
}
neg {
	name=fbcdn.net;
	types=domain;
}

include {file="/etc/pdnsd.adservers";}

/* vim:set ft=c: */

